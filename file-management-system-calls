// Q) read directory 
#include <stdio.h>
#include <dirent.h>
#include <stdlib.h>

int main(int argc, char *argv[]) {
    struct dirent *dptr;
    DIR *dname;

    if (argc != 2) {
        printf("Usage: ./a.out <dirname>\n");
        exit(-1);
    }

    if ((dname = opendir(argv[1])) == NULL) {
        perror(argv[1]);
        exit(-1);
    }

    while ((dptr = readdir(dname))) {
        printf("%s\n", dptr->d_name);
    }

    closedir(dname);

    return 0;
}

// Q) read file
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <fcntl.h>

int main(int argc, char *argv[]) {
    int fd, i;
    char buff[100];

    if (argc < 2) {
        printf("Usage: ./a.out <filename>\n");
        exit(-1);
    }

    fd = open(argv[1], O_RDONLY);

    if (fd == -1) {
        printf("%s file does not exist\n", argv[1]);
        exit(-1);
    }

    printf("Contents of the file %s are: \n", argv[1]);

    while (read(fd, buff, sizeof(buff)) > 0) {
        printf("%s", buff);
    }

    close(fd);

    return 0;
}

// Q) write file
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <fcntl.h>

int main(int argc, char *argv[]) {
    int fd, n, len;
    char buf[100];

    if (argc != 2) {
        printf("Usage: ./a.out <filename>\n");
        exit(-1);
    }

    fd = open(argv[1], O_APPEND | O_WRONLY | O_CREAT, 0644);

    if (fd < 0) {
        perror(argv[1]);
        exit(-1);
    }

    while ((n = read(0, buf, sizeof(buf))) > 0) {
        len = strlen(buf);
        write(fd, buf, len);
    }

    close(fd);

    return 0;
}

// Q) ls command simulation 
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <dirent.h>

int main() {
    struct dirent **namelist;
    int n, i;
    char pathname[100];

    getcwd(pathname, sizeof(pathname));
    n = scandir(pathname, &namelist, 0, alphasort);

    if (n < 0) {
        printf("Error\n");
    } else {
        for (i = 0; i < n; i++) {
            if (namelist[i]->d_name[0] != '.') {
                printf("%-20s", namelist[i]->d_name);
            }
        }
    }

    return 0;
}
